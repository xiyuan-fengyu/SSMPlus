<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation="
	   	http://www.springframework.org/schema/beans
	   	http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/cache
		http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/data/mongo
       http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
		">

    <!-- 设置扫描@Controller,@Component, @Repository, @Transactional等注解的目录 -->
    <context:component-scan base-package="com.xiyuan" />
    <context:annotation-config />

    <!--开启定时任务-->
    <task:annotation-driven />

    <!-- 打开aop注解 -->
    <aop:aspectj-autoproxy proxy-target-class="true" />

    <!-- 加载配置 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:property/database.properties</value>
                <value>classpath:property/redis.properties</value>
                <value>classpath:property/mongodb.properties</value>
                <value>classpath:property/elasticsearch.properties</value>
            </list>
        </property>
    </bean>


    <!--mybatis、事务配置 start-->
    <bean id="mysqlDataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${db.driver}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>

        <property name="validationQuery" value="select 1 from dual"/>
        <property name="testOnBorrow" value="true"/>

        <!--连接池相关配置
         参考：http://www.cnblogs.com/adolfmc/archive/2013/01/22/2872298.html
         start-->
        <property name="initialSize" value="${db.pool.initialSize}"/>
        <property name="maxActive" value="${db.pool.maxActive}"/>
        <property name="minIdle" value="${db.pool.minIdle}"/>
        <property name="maxIdle" value="${db.pool.maxIdle}"/>
        <!--设置在自动回收超时连接的时候打印连接的超时错误-->
        <property name="logAbandoned" value="true"/>
        <!--设置自动回收超时连接 -->
        <property name="removeAbandoned"  value="true"/>
        <!--自动回收超时时间(单位：秒)-->
        <property name="removeAbandonedTimeout" value="10"/>
        <!--超时等待时间(单位：毫秒)-->
        <property name="maxWait" value="1000"/>
        <!--连接池相关配置 end-->
    </bean>
    <!-- 配置数据源结束 -->

    <!-- 配置session工厂 -->
    <bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean">
        <property name="dataSource" ref="mysqlDataSource"/>
        <property name="mapperLocations">
            <array>
                <!--通过 com.xiyuan.template.mybatis.MpGenerator 生成对应的entity，mapper，dao，xml后，解开下面两个注释-->
                <value>classpath:mapper/xml/*.xml</value>
                <value>classpath:mapper/*.xml</value>
            </array>
        </property>
        <!--http://baomidou.oschina.io/mybatis-plus-doc/#/page-plugin-->
        <!--https://blog.csdn.net/mxj588love/article/details/53490118-->
        <property name="plugins">
            <list>
                <bean class="com.baomidou.mybatisplus.plugins.PaginationInterceptor"/>
            </list>
        </property>
    </bean>

    <!--查找dao-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
          p:basePackage="com.xiyuan.*"
          p:sqlSessionFactoryBeanName="sqlSessionFactory"
    />

    <!-- 事务管理配置 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="mysqlDataSource"
    />
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!--mybatis、事务配置 end-->



    <!--jedis 配置 start-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.pool.maxTotal}"/>
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <property name="minIdle" value="${redis.pool.minIdle}"/>
        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="true"/>
    </bean>

    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg name="poolConfig" ref="jedisPoolConfig" />
        <constructor-arg name="host" value="${redis.ip}" />
        <constructor-arg name="port" value="${redis.port}" type="int" />
        <constructor-arg name="timeout" value="${redis.timeout}" type="int" />
        <constructor-arg name="password" value="${redis.password}" />
        <constructor-arg name="database" value="${redis.db.index}" type="int" />
    </bean>

    <bean id="jedis" class="com.xiyuan.template.redis.JedisAop" p:jedisPool-ref="jedisPool"/>
    <!--jedis 配置 end-->


    <!--mongodb 配置 start-->
    <mongo:mongo-client id="mongoClient" replica-set="${mongo.url}" credentials="${mongo.credentials}">
        <mongo:client-options
                connections-per-host="${mongo.connectionsPerHost}"
                threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"
                connect-timeout="${mongo.connectTimeout}"
                max-wait-time="${mongo.maxWaitTime}"
                socket-keep-alive="${mongo.socketKeepAlive}"
                socket-timeout="${mongo.socketTimeout}"
        />
    </mongo:mongo-client>
    <mongo:db-factory dbname="${mongo.db}" mongo-ref="mongoClient"/>
    <mongo:template id="mongoTemplate" db-factory-ref="mongoDbFactory"/>
    <mongo:repositories base-package="com.xiyuan.*"/>
    <!--mongodb 配置 end-->

    <bean id="elasticSearch" class="com.xiyuan.template.es.ElasticSearch">
        <constructor-arg index="0" value="${elasticsearch.url}"/>
        <constructor-arg index="1" value="${elasticsearch.charset}"/>
        <constructor-arg index="2" value="${elasticsearch.print}"/>
    </bean>

</beans>